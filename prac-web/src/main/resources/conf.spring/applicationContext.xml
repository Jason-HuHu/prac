<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task-3.0.xsd
		http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
	default-lazy-init="true">

	<!--<bean class="com.eshore.khala.common.utils.SpringContextHelper"-->
		<!--lazy-init="false" />-->

	<!-- 定义受环境影响易变的变量 -->
	<context:property-placeholder location="classpath*:*.properties" />

	<context:component-scan base-package="com.huxl.*">
		<context:exclude-filter expression="org.springframework.stereotype.Controller"
			type="annotation" /><!-- 将Controller的注解排除掉，在spring-mvc.xml单独扫描Controller注解 -->
	</context:component-scan>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManage" />

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl"  value="${jdbc.url}" />
		<property name="user" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<aop:aspectj-autoproxy expose-proxy="true"
		proxy-target-class="false" />

	<bean id="transactionManage"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!--========================================hibernate start=============================================->
	<!=-<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">-->
		<!--<property name="dataSource" ref="dataSource" />-->
		<!--<property name="hibernateProperties">-->
			<!--<props>-->
				<!--<prop key="dialect">org.hibernate.dialect.MySQL5Dialect</prop>-->
				<!--<prop key="hbm2ddl.auto">none</prop>-->
				<!--<prop key="show_sql">true</prop>-->
				<!--<prop key="format_sql">true</prop>-->
				<!--<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>-->
			<!--</props>-->
		<!--</property>-->
		<!--<property name="packagesToScan"  value="com.eshore.*"/>-->
	<!--</bean>-->


	<!--<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">-->
		<!--<property name="sessionFactory" ref="sessionFactory" />-->
	<!--</bean>-->
	<!-- ========================================hibernate end=============================================->
	<!-  ==================================JPA start================================== -->
	<!-- 用于基于JPA开发的插件加进来， 但JPA和MyBatis的事务都由JPA事务来管理 ，它是基于数据源做事务的，会接管所有的事务，推荐在Service以注解的方式声明事务，这样方便管理 -->
	<!-- Jpa Entity Manager 配置 -->
	<!-- <bean class="com.eshore.khala.core.data.jpa.spring.integration.EshoreLocalContainerEntityManagerFactoryBean"
		id="entityManagerFactory"> <property name="dataSource" ref="dataSource" />
		<property name="persistenceXmlLocation" value="classpath:META-INF/persistence.xml"
		/> </bean> -->
	<!-- 事务管理器配置, Jpa单数据源事务 -->
	<!-- <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" /> <property
		name="dataSource" ref="dataSource" /> <property name="globalRollbackOnParticipationFailure"
		value="false" /> </bean> -->
	<!-- ==================================JPA end ================================== -->


	<!--<bean id="taskExecutor"-->
		<!--class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">-->
		<!--&lt;!&ndash; 线程池维护线程的最少数量 &ndash;&gt;-->
		<!--<property name="corePoolSize" value="5" />-->
		<!--&lt;!&ndash; 允许的空闲时间 &ndash;&gt;-->
		<!--<property name="keepAliveSeconds" value="60" />-->
		<!--&lt;!&ndash; 线程池维护线程的最大数量 &ndash;&gt;-->
		<!--<property name="maxPoolSize" value="50" />-->
		<!--&lt;!&ndash; 缓存队列 &ndash;&gt;-->
		<!--<property name="queueCapacity" value="200" />-->
	<!--</bean>-->

	<!--<bean id="cacheTemplate" class="com.eshore.ac.classlib.redis.CacheTemplate">-->
		<!--<property name="initGroups" value="group.cbs.757" />-->
		<!--<property name="timeout" value="600000" />-->
		<!--<property name="userName" value="SMARTBSS_SF" />-->
		<!--<property name="password" value="Ab123456!" />-->
	<!--</bean>-->
	<!-- 其他组件配置文件加载 -->
	<import resource="classpath:conf.spring/spring-quartz.xml"/>
</beans>