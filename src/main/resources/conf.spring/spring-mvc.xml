<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd"
	default-lazy-init="true">
	<!-- 静态页面文件 -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- 使Spring支持自动检测组件，如注解的Controller -->
	<context:component-scan base-package="com.huxl"
		use-default-filters="false">
		<context:include-filter expression="org.springframework.stereotype.Controller"
			type="annotation" />
		<context:exclude-filter expression="org.springframework.stereotype.Service"
			type="annotation" /><!-- 在springMVC配置文件中将Service注解给去掉,而由applicationContext.xml父容器进行初始化以保证service的事务的增强处理 -->
	</context:component-scan>

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射,解决@ResponseBody乱码问题, 需要在annotation-driven和component-scan之前,否则乱码问题同样无法解决 -->
	<!-- Spring3.1推荐使用RequestMappingHandlerAdapter -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="stringHttpMessageConverter" />
				<ref bean="mappingJackson2HttpMessageConverter" />
			</list>
		</property>
	</bean>

	<mvc:annotation-driven />

	<!-- 将无法mapping到Controller的path交给default servlet handler处理 -->
	<mvc:default-servlet-handler />
	 <!--  视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/plugins/" p:suffix=".jsp" />

	<!--<bean  class="org.springframework.web.servlet.mvc.annotation.RequestMappingHandlerMapping" />-->

	<!-- 配置Spring文件上传 -->
	<!--<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">-->
		<!--<property name="defaultEncoding" value="UTF-8"></property>-->
		<!--<property name="maxUploadSize" value="-1"></property> &lt;!&ndash; 单位字节 1024*1024*10 10MB &ndash;&gt;-->
		<!--<property name="maxInMemorySize" value="20480"></property> &lt;!&ndash; 在内存中的最大大小 &ndash;&gt;-->
		<!--<property name="resolveLazily" value="true"></property>-->
	<!--</bean>-->
	<!-- 处理JSON数据转换，为了处理返回的JSON数据的编码，默认是ISO-88859-1的，这里把它设置为UTF-8,解决有乱码的情况 -->
	<bean id="mappingJackson2HttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- 对RequestParam,ResponseBody注解 解析字符数据的转换器  -->
	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- 配置拦截器 -->
	<!-- <mvc:interceptors> <mvc:interceptor> <mvc:mapping path="/**" /> <bean
		class ="com.eshore.ac.interceptor.RestParmsHandlerInterceptor"/> </mvc:interceptor>
		</mvc:interceptors> -->
</beans>